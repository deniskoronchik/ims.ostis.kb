/!* keyword: scs_code_1_level */
scs_code_1_level => nrel_main_ru_idtf: 
		[SCs-код уровня 1] ;;
scs_code_1_level => nrel_main_en_idtf: 
		[SCs-code level 1] ;;

scs_code_1_level => hypermedia_nrel_explanation:
	[
	SCs-код уровня 1 аналогичен SCg-коду уровня 1 и представляет собой простейшее универсальное средство кодирования (представления) любого sc-графа в линейном виде, т.е. в виде цепочки (строки) символов. При этом каждому sc-элементу представляемого sc-графа взаимно-однозначно ставится в соответствие его строковый идентификатор (имя), что делает необходимым специально придумывать имена для всех (!) используемых sc-элементов, входящих в состав представляемого sc-графа.	
	];;
	
/!* keyword: scs_sentence_1_level */
scs_sentence_1_level => nrel_main_ru_idtf: 
		[sc.s-предложение уровня 1] ;;
scs_sentence_1_level => nrel_main_en_idtf: 
		[sc.s-sentence level 1] ;;

scs_sentence_1_level <= hypermedia_nrel_explanation: 
	[
sc.s-предложение уровня 1 - sc.s-предложение, содержащее только sc.s-разделители инцидентности и имена sc-элементов.
Каждое такое предложение представляет собой тройку, каждая из которых описывает инцидентность некоторого sc-коннектора и двух других sc-элементов.
Для этого все sc-элементы должны быть проименованы. Коннекторы и файлы именуются соответственно правилам идентификации коннекторов и файлов. 
Запрещается использование неатомарных идентификаторов, содержащих ограничители <...>, {...}, \[...\] или \[*...*\].
При этом в каждой описываемой тройке среднее имя соответствует sc-коннектору, тип которого может быть уточнен при помощи правил идентификации.
В случае, если указанный sc-коннектор ориентированный (т.е. является sc-дугой), то первый и третий элемент тройки соответствуют первому и второму элементам связки, знаком которой является данный sc-коннектор.
Т.е. имя sc-элемента, из которого выходит указанная дуга, указывается первым в тройке, а имя sc-элемента, в который входит эта дуга, указывается третьим в тройке.
Для указания типов sc-элементов могут быть использованы следующие правила уточнения типа sc-элемента:
<" имя элемента с уточнением типа "> ::= <" тип элемента "> # \["<" имя элемента ">"\]
<" тип элемента "> ::= (" sc_node || sc_link || sc_arc_common || sc_edge || sc_arc_main || sc_arc_access ")
<" имя элемента "> - произвольная уникальная  строка символов, уникальная для sc-элементов заданного типа. В качестве имени рекомендуется использовать системный идентификатор sc-элемента. Если перед глобальным идентификатором ставится знак “.” , то такое имя служит только для обозначения элемента в исходных текстах, и не транслируется как системный идентификатор. При этом такое имя также должно быть уникальным в рамках всех исходных тестов базы знаний.
<" имя элемента "> может отсутствовать, тогда sc-элемент, описанный как <" тип элемента "> # будет воспринят как sc-элемент указанного типа без идентификатора.
sc-элемент без указания типа по умолчанию считается sc-узлом.
	];;
scs_sentence_1_level => nrel_generalized_syntax_structure:
	[
		<" sc.s-предложение уровня 1 "> ::= <" имя первого элемента тройки "> | <" имя коннектора "> | <" имя второго элемента тройки "> ;;
	]
	(*
		<- backus_naur_metalanguage ;;
	*);;
scs_sentence_1_level -> rrel_example:
	[
		Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD) | pair1/sc-arc-common | Отр(ТчкВ;ТчкС);;
	];;
scs_sentence_1_level -> rrel_example:
	[
	включение* | sc-arc-main#arc2 | sc_arc_common#pair1;;
	];;
scs_sentence_1_level -> rrel_example:
	[
	Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD) | sc_arc_common#pair1 | Отр(ТчкВ;ТчкС);;
	];;

	
/!* keyword: scs_text_1_level */
scs_text_1_level => nrel_main_ru_idtf: 
		[sc.s-текст уровня 1] ;;
scs_text_1_level => nrel_main_en_idtf: 
		[sc.s-text level 1] ;;

scs_text_1_level <= hypermedia_nrel_explanation: 
		[sc.s-текст уровня 1 - sc.s-текст, содержащий только sc.s-предложения уровня 1];;
scs_text_1_level -> rrel_example:
		[
		включение* | sc_arc_main#arc1 | sc_arc_common#pair2;;
		включение* | sc_arc_main#arc2 | sc_arc_common#pair1;;
		включение* | sc_arc_main#arc3 | sc_arc_common#pair3;;
		включение* | sc_arc_main#arc4 | sc_arc_common#pair4;;
		включение * | sc_arc_main#arc15 | sc_arc_common#pair5;;
		сторона* | sc_arc_main#arc5 | sc_arc_common#pair1;;
		сторона* | sc_arc_main#arc6 | sc_arc_common#pair2;;
		сторона* | sc_arc_main#arc7 | sc_arc_common#pair4;;
		сторона* | sc_arc_main#arc8 | sc_arc_common#pair3;;
		сторона* | sc_arc_main#arc10 | sc_arc_common#pair5;;
		Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD) | sc_arc_common#pair1 | Отр(ТчкВ;ТчкС);;
		Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD) | sc_arc_common#pair2 | Отр(ТчкC;ТчкD);;
		Треугк(ТчкВ;ТчкС;ТчкD) | sc_arc_common#pair3 | Отр(ТчкВ;ТчкС);;
		Треугк(ТчкВ;ТчкС;ТчкD) | sc_arc_common#pair4 | Отр(ТчкC;ТчкD);; 
		Треугк(ТчкВ;ТчкС;ТчкD) | sc_arc_common#pair5 | Отр(ТчкB;ТчкD);; 
		четырехугольник | sc_arc_main#arc9 | Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD);;
		треугольник | sc_arc_main#arc15 | Треугк(ТчкВ;ТчкС;ТчкD);;
		link1 | sc_arc_common#pair6 | Треугк(ТчкВ;ТчкС;ТчкD);; 
		декомпозиция фигуры* | sc_arc_main#arc14 | sc_arc_common#pair6;;
		link1 | sc_arc_main#arc11 | Отр(ТчкВ;ТчкС);;
		link1 | sc_arc_main#arc12 | Отр(ТчкC;ТчкD);;
		link1 | sc_arc_main#arc13 | Отр(ТчкВ;ТчкD);;
		]
		(*
			<=> nrel_semantic_equivalence: "file://../images/scs_text_example_1.png";;
			<=> nrel_semantic_equivalence: "file://scs_code_1_level_text1.html";;
			<= hypermedia_nrel_illustration:
				"file://../images/common_illusration.png";;
		*);;