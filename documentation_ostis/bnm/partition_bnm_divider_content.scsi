/!* keyword: bnm_divider */
	bnm_divider => nrel_main_ru_idtf: [разделитель метаязыка Бэкуса-Наура] ;;
	bnm_divider => nrel_main_en_idtf: [Backus-Naur metalanguage divider] ;;
	bnm_divider <= set_nrel_subdividing:
	{
		bnm_linguistic_variable_terminator;
		bnm_divider_repeat_construction;
		bnm_alternatives_list_terminator_bracket;
		bnm_alternatives_list_terminator;
		bnm_divider_left_and_right_part_of_sentence
	};;
		
/!* keyword: bnm_alternatives_list_terminator_bracket */
bnm_alternatives_list_terminator_bracket => nrel_main_ru_idtf: 
	[ограничитель списка альтернатив] ;;
bnm_alternatives_list_terminator_bracket => nrel_main_en_idtf: 
	[alternatives list terminator] ;;

bnm_alternatives_list_terminator_bracket <= set_nrel_inclusion:
	bnm_divider;;
bnm_alternatives_list_terminator_bracket <= hypermedia_nrel_explanation:
	[ограничитель списка альтернатив записывается в виде ("  "). Выражение, ограниченное этими скобками, обозначает какую-либо одну из перечисленных альтернатив.];;
bnm_alternatives_list_terminator_bracket <= scs_nrel_representation_scs_editor:
	{
		[("];
		[")]
	};;
bnm_alternatives_list_terminator_bracket <= scs_nrel_using_example:
	[
		<" имя sc-элемента "> ::= (" <" атомарное имя sc-элемента "> || <" неатомарное имя sc-элемента "> ") 
		<" неатомарное имя sc-элемента "> ::= ( <" имя sc-элемента "> <" изображение коннектора "> <" имя sc-элемента "> ) (" суффикс || *** ")
	];;
	
/!* keyword: bnm_alternatives_divider */
bnm_alternatives_divider => nrel_main_ru_idtf: 
	[разделитель альтернатив] ;;
bnm_alternatives_divider => nrel_main_en_idtf: 
	[alternatives divider] ;;

bnm_alternatives_divider <= set_nrel_inclusion:
	bnm_divider;;
bnm_alternatives_divider <= hypermedia_nrel_explanation:
	[разделитель альтернатив записывается в виде ||. Данный разделитель разделяет альтернативы, перечисленные в рамках одной пары скобок ограничения альтернатив.];;
bnm_alternatives_divider <= scs_nrel_representation_scs_editor:
	[||];;
bnm_alternatives_divider <= scs_nrel_using_example:
	[
		<" имя sc-элемента "> ::= (" <" атомарное имя sc-элемента "> || <" неатомарное имя sc-элемента "> ")
	];;
	
/!* keyword: bnm_divider_left_and_right_part_of_sentence */ 
bnm_divider_left_and_right_part_of_sentence => nrel_main_ru_idtf: 
	[разделитель левой и правой части предложения] ;;
bnm_divider_left_and_right_part_of_sentence => nrel_main_en_idtf: 
	[left and right part of sentence divider] ;;

bnm_divider_left_and_right_part_of_sentence <= set_nrel_inclusion:
	bnm_divider;;
bnm_divider_left_and_right_part_of_sentence <= hypermedia_nrel_explanation:
	[разделитель левой и правой части предложения имеет две модификации. 
	Первая модификация записывается в виде ::= и задает операцию "присваивания" левой части правила Бэкуса-Наура, конструкции, описанной в правой его части, то есть устанавливает факт эквивалентности между ними.
	Вторая модификация записывается в виде ::> и устанавливает тот факт, что некоторые (но необязательно все) из конструкций, описываемых левой частью правила Бэкуса-Наура соответствуют конструкциям, описываемым в правой его части. При этом все конструкции, описываемые правой частью правила, соответствуют его левой части.
	];;
bnm_divider_left_and_right_part_of_sentence <= scs_nrel_representation_scs_editor:
{
	[::=];
	[::>]
};;
bnm_divider_left_and_right_part_of_sentence <= scs_nrel_using_example:
	[
	<" имя sc-элемента "> ::= (" <" атомарное имя sc-элемента "> || <" неатомарное имя sc-элемента "> ") 
	<" неатомарное имя sc-элемента "> ::= ( <" имя sc-элемента "> <" изображение коннектора "> <" имя sc-элемента "> ) (" суффикс || *** ")
	<" имя sc-элемента, обозначающего треугольник "> ::> Треугк(<" имя sc-элемента, обозначающего точку ">; <" имя sc-элемента, обозначающего точку ">; <" имя sc-элемента, обозначающего точку ">)
	];;
	
/!* keyword: bnm_divider_repeat_construction */
bnm_divider_repeat_construction => nrel_main_ru_idtf: 
	[ограничитель конструкции, которая может повторяться сколько угодно раз] ;;
bnm_divider_repeat_construction <= set_nrel_inclusion:
	bnm_divider;;
bnm_divider_repeat_construction <= scs_nrel_representation_scs_editor:
{
	[{"];
	["}]
};;
bnm_divider_repeat_construction <= hypermedia_nrel_explanation:
	[ограничитель конструкции, которая может повторяться сколько угодно раз записывается в виде {"  "}. При этом указанная конструкция должна быть представлена хотя бы один раз.];;
bnm_divider_repeat_construction <= scs_nrel_using_example:
	[
		<" имя sc-элемента "> <" изображение sc-коннектора "> (" {" (" {" <" уточнение типа модификатора "> + "} || *** ") <" модификатор коннектора "> : "} || *** ") <" имя sc-элемента "> ;;
	];;

/!* keyword: bnm_linguistic_variable_terminator */
bnm_linguistic_variable_terminator => nrel_main_ru_idtf: 
	[ограничитель лингвистической переменной] ;;
bnm_linguistic_variable_terminator => nrel_main_en_idtf: 
	[linguistic variable terminator] ;;

bnm_linguistic_variable_terminator <= set_nrel_inclusion:
	bnm_divider;;
bnm_linguistic_variable_terminator <= scs_nrel_representation_scs_editor:
{
	[<"];
	[">]
};;
bnm_linguistic_variable_terminator <= hypermedia_nrel_explanation:
	[ограничитель лингвистической переменной, записывается в виде <" "> и используется для выделения лингвистических переменных в тексте метаязыка Бэкуса-Наура.];;

bnm_linguistic_variable_terminator <= scs_nrel_using_example:
	[
		<" sc.s-коннектор ">
	];;
	
